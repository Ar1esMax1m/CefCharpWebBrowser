<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ACXoAAAVqIAAl/kAAl/pIBKX/ySSf/0gEP8=
</value>
  </data>
</root>